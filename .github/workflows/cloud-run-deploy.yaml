# Reusable Workflow to deploy a new revision to Cloud Run

# Prerequisites:
# 1. Create service account
#   1a. Service Account Token Creator
# 2. Setup Workload Identity Federation Provider for the service account using GitHub's OIDC provider
#   2a. https://youtu.be/ZgVhU5qvK1M  for a video overview on Workload Identity Federation Providers

name: Deploy to Cloud Run

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to deploy to'
        required: true
        type: string
        default: 'production'
      version:
        description: 'The version of the image to deploy'
        required: true
        type: string
        default: 'latest'
      service:
        description: 'The name of the Cloud Run service to deploy to'
        required: true
        type: string
        default: 'dpgraham-server'

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REPOSITORY: ${{ vars.REPOSITORY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  GOOGLE_REGISTRY_LOCATION: ${{ vars.GOOGLE_REGISTRY_LOCATION }}

jobs:
  deploy:
    if: github.repository == 'dpgraham-com/dpgraham-server'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: 'actions/checkout@v3'

      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v1
        id: auth
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.SA_EMAIL }}
          token_format: 'access_token'

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v1'
        with:
          service: ${{ inputs.service }}
          image: ${{ env.GOOGLE_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ inputs.version }}
          region: ${{ env.GOOGLE_REGISTRY_LOCATION }}
